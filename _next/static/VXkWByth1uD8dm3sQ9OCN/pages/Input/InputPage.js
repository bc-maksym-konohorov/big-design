(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{"/+1d":function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/Input/InputPage",function(){var e=t("JUCr");return{page:e.default||e}}])},JUCr:function(e,n,t){"use strict";t.r(n);var a=t("+Ls6"),l=t("ERkP"),r=t.n(l),o=t("GsAr"),c=t("lIm4"),i=t("pneb"),s=t("R5dR"),m=t("nFRM"),u=[{name:"description",types:"ReactChild",description:"Append a description to the input field."},{name:"error",types:["ReactChild","ReactChild[]"],description:r.a.createElement(r.a.Fragment,null,"Displays an error message for the field. Error message will be passed to the ",r.a.createElement(c.a,null,"Form.Group")," for display purposes.")},{name:"iconLeft",types:r.a.createElement(s.a,{href:"/Icons/IconsPage",as:"/icons"},"Icon"),description:r.a.createElement(r.a.Fragment,null,"Pass in an"," ",r.a.createElement(s.a,{href:"/Icons/IconsPage",as:"/icons"},"Icon")," ","component to display to the left of the text.")},{name:"iconRight",types:r.a.createElement(s.a,{href:"/Icons/IconsPage",as:"/icons"},"Icon"),description:r.a.createElement(r.a.Fragment,null,"Pass in an"," ",r.a.createElement(s.a,{href:"/Icons/IconsPage",as:"/icons"},"Icon")," ","component to display to the right of the text.")},{name:"label",types:"ReactChild",description:r.a.createElement(r.a.Fragment,null,"Label element for inputs. Component with auto generate ",r.a.createElement(c.a,null,"id"),"'s for the accessibility API.")}],p=function(e){return r.a.createElement(m.a,Object(i.a)({title:"Input",propList:u},e))},E=function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement(a.H2,null,"Input.Description"),r.a.createElement(a.Text,null,"Supports all native ",r.a.createElement(c.a,null,"<p />")," element attributes."))},d=function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement(a.H2,null,"Input.Error"),r.a.createElement(a.Text,null,"See"," ",r.a.createElement(s.a,{href:"/Form/FormPage",as:"/form#error"},"Forms.Error"),"."))},h=function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement(a.H2,null,"Input.Label"),r.a.createElement(a.Text,null,"See"," ",r.a.createElement(s.a,{href:"/Form/FormPage",as:"/form#label"},"Forms.Label"),"."))};n.default=function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement(a.H0,null,"Input"),r.a.createElement(a.Text,null,"Inputs are stylized form controls with the ability of controling validation."," ",r.a.createElement(a.Link,{href:"https://design.bigcommerce.com/components/text-field",target:"_blank"},"Text Field Design Guidelines"),"."),r.a.createElement(o.a,null,'function Example() {\n  const [value, setValue] = React.useState(\'\');\n\n  const handleChange = event => setValue(event.target.value);\n\n  return (\n    <Form.Group>\n      <Input\n        label="Label"\n        description="Description for the input."\n        placeholder="Placeholder"\n        type="text"\n        value={value}\n        onChange={handleChange}\n      />\n    </Form.Group>\n  );\n}'),r.a.createElement(a.H1,null,"API"),r.a.createElement(a.Text,null,"Supports all native ",r.a.createElement(c.a,null,"<input />")," element attributes."),r.a.createElement(p,null),r.a.createElement(E,null),r.a.createElement(d,null),r.a.createElement(h,null),r.a.createElement(a.H1,null,"Error State"),r.a.createElement(a.Text,null,"Inputs allow you to pass in an ",r.a.createElement(c.a,{primary:!0},"error")," message that will control the styles of an input. The logic on the input can be controlled with the ",r.a.createElement(c.a,{primary:!0},"onChange")," prop."),r.a.createElement(o.a,null,'<Form>\n  <Form.Group>\n    <Input\n      label="Email Address"\n      description="Provide a valid email address."\n      value="example@"\n      error="Email address must contain a domain name."\n      onChange={() => null}\n    />\n  </Form.Group>\n</Form>'),r.a.createElement(a.H1,null,"Icons"),r.a.createElement(a.Text,null,"Inputs can also contain icons via the ",r.a.createElement(c.a,null,"iconLeft")," & ",r.a.createElement(c.a,null,"iconRight")," props."),r.a.createElement(o.a,null,'<Form>\n  <Form.Group>\n    <Input label="Example" placeholder="Example" iconLeft={<CheckCircleIcon color="success" />} />\n    <Input label="Example" placeholder="Example" iconRight={<CheckCircleIcon color="success" />} />\n  </Form.Group>\n</Form>'))}}},[["/+1d",1,0]]]);