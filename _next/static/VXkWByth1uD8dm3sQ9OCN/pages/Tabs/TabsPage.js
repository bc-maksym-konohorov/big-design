(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{TNpL:function(e,t,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/Tabs/TabsPage",function(){var e=a("wWHF");return{page:e.default||e}}])},wWHF:function(e,t,a){"use strict";a.r(t);var n=a("+Ls6"),i=a("ERkP"),r=a.n(i),s=a("lIm4"),l=a("GsAr"),c=a("pneb"),b=a("R5dR"),o=a("nFRM"),m=[{name:"activeTab",types:"string",description:"Determines the active tab by tab id."},{name:"items",types:r.a.createElement(b.a,{href:"#tabs-items-prop-table"},"TabItem[]"),description:r.a.createElement(r.a.Fragment,null,"See ",r.a.createElement(b.a,{href:"#tabs-items-prop-table"},"below")," for usage.")},{name:"onTabClick",types:"(tabId: string) => void",description:"Function that will get called when a tab is clicked."}],p=function(e){return r.a.createElement(o.a,Object(c.a)({title:"Tabs",propList:m},e))},T=[{name:"id",types:"string",description:"Tab identifier, must be unique.",required:!0},{name:"title",types:"string",description:"Title for the tab.",required:!0},{name:"disabled",types:"boolean",description:"Determines if the Tab is disabled."}],d=function(e){return r.a.createElement(o.a,Object(c.a)({title:"Tabs[TabItem]",propList:T},e))};t.default=function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement(n.H0,null,"Tabs"),r.a.createElement(n.Text,null,"The ",r.a.createElement(s.a,{primary:!0},"Tabs")," component is used to organize and navigate between content types that are related and at the same level of information architecture heirarchy."," ",r.a.createElement(n.Link,{href:"https://design.bigcommerce.com/components/tabs",target:"_blank"},"Tabs Design Guidelines"),"."),r.a.createElement(l.a,null,"function Example() {\n  const [activeTab, setActiveTab] = React.useState('tab1');\n\n  const items = [\n    { id: 'tab1', title: 'Example 1' },\n    { id: 'tab2', title: 'Example 2' },\n    { id: 'tab3', title: 'Example 3' },\n    { id: 'tab4', title: 'Example 4', disabled: true },\n  ];\n\n  return (\n    <>\n      <Tabs activeTab={activeTab} items={items} onTabClick={setActiveTab} />\n      <Box marginTop=\"large\">\n        {activeTab === 'tab1' && <Text>Content 1</Text>}\n        {activeTab === 'tab2' && <Text>Content 2</Text>}\n        {activeTab === 'tab3' && <Text>Content 3</Text>}\n        {activeTab === 'tab4' && <Text>Content 4</Text>}\n      </Box>\n    </>\n  );\n}"),r.a.createElement(n.H1,null,"API"),r.a.createElement(p,null),r.a.createElement(d,{id:"tabs-items-prop-table"}))}}},[["TNpL",1,0]]]);